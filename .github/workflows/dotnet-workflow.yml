name: "Dotnet project workflow"
on: 
  -
    push
jobs:
  build:
      runs-on: ubuntu-latest
      outputs:
        version: ${{steps.tagging.outputs.VERSION}}
      steps:
        -
          name: "Getting Project From Repository"
          uses: actions/checkout@v2
        - 
          name: "Project Roots"
          run: pwd
        - 
          name: "List Of Folders"
          run: ls -la
        - 
          name: "Setup Dotnet"
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: '3.1.x'
        -
          name: "Project Building"
          run: dotnet build
        -
          name: "Project Restoring"
          run: dotnet restore
        -
          name: "Project Testing"
          run: dotnet test -v q
        -
          name: "Tag Project If There IS A Tag Of Project"
          id: tagging
          run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
        -
          run: echo ${GITHUB_REF#refs/tags/}
  deploy-to-docker-hub:
    needs: [build]
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      -
        name: "Setup QEMU"
        uses: docker/setup-qemu-action@v1
      -
        name: "Setup Docker Buildx"
        uses: docker/setup-buildx-action@v1
      -
        name: "Login To DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USER_NAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      -
        name: "Docker Image Push To DockerHub"
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: fatihmert/dreamer-man:${{needs.build.outputs.version}}
  start-server:
    needs: [build,deploy-to-docker-hub]
    runs-on: [self-hosted]
    steps:
      -
        name: "Login To DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USER_NAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      -
        name: "Pull Docker Image"
        run: docker pull fatihmert/dreamer-man
      -
        name: "Container Start"
        run: docker container run -d -p 5000:5000 --name "dramer-man-api" fatihmert/dreamer-man:latest



